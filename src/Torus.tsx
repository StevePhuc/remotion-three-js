/*
  Auto-generated by Spline
*/
import useSpline from "@splinetool/r3f-spline";
import { useEffect } from "react";
import { useThree } from "@react-three/fiber";
import { interpolate, spring, useCurrentFrame, useVideoConfig } from "remotion";

export default function Scene({ ...props }) {
  const { nodes, materials } = useSpline(
    "https://prod.spline.design/SVlNCP0-Y4BTqOxD/scene.splinecode"
  );
  const frame = useCurrentFrame();
  const { fps, durationInFrames } = useVideoConfig();

  const camera = useThree((state) => state.camera);
  useEffect(() => {
    camera.position.set(0, 0, -400);
    camera.near = 0.2;
    camera.far = 1000;
    camera.lookAt(0, 0, 0);
  }, [camera]);

  const constantRotation = interpolate(
    frame,
    [0, durationInFrames],
    [0, Math.PI * 6]
  );

  const entranceAnimation = spring({
    frame,
    fps,
    config: {
      damping: 200,
    },
  });

  return (
    <>
      <color attach="background" args={["#4b4d52"]} />
      <group {...props} dispose={null}>
        <scene name="Scene">
          <mesh
            name="Torus"
            geometry={nodes.Torus.geometry}
            material={materials["Torus Material"]}
            castShadow
            receiveShadow
            scale={entranceAnimation + 3}
            rotation={[constantRotation / 2, constantRotation, 0]}
          />
          <hemisphereLight
            name="Default Ambient Light"
            intensity={0.75}
            color="#eaeaea"
          />
        </scene>
      </group>
    </>
  );
}
